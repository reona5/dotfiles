[[plugins]]
repo = '~/.cache/dein/repos/github.com/Shougo/dein.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
    \ 'colorscheme': 'seoul256',
    \ 'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
    \ },
    \ 'component_function': {
    \   'gitbranch': 'FugitiveHead'
    \ },
    \ }
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
merged = 0
hook_add = '''
  let g:coc_global_extensions = [
    \ 'coc-diagnostic'
    \, 'coc-tsserver'
    \, 'coc-solargraph'
    \, 'coc-vetur'
    \, 'coc-tabnine'
    \, 'coc-explorer'
    \, 'coc-markdownlint'
    \, 'coc-eslint'
    \, 'coc-json'
    \, 'coc-yaml'
    \, 'coc-prettier'
    \, 'coc-fzf-preview'
  \]

  " Some servers have issues with backup files, see #649.
  set nobackup
  set nowritebackup

  " Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
  " delays and poor user experience.
  set updatetime=300

  " Don't pass messages to |ins-completion-menu|.
  set shortmess+=c

  command! -nargs=0 Prettier :call CocAction('runCommand', 'prettier.formatFile')
  nmap <silent> [g <Plug>(coc-diagnostic-prev)
  nmap <silent> ]g <Plug>(coc-diagnostic-next)
  xmap ff  <Plug>(coc-format-selected)
  nmap ff  <Plug>(coc-format-selected)
  nmap <silent> L :<C-u>CocList<cr>
  nnoremap <silent> K :call <SID>show_documentation()<CR>
  nmap <silent> <C-]> <Plug>(coc-definition)
  nmap <silent> <C-[> <Plug>(coc-type-definition)
  nmap <silent> <C-u> <Plug>(coc-implementation)
  nmap <silent> <C-t> <Plug>(coc-references)
  nmap <silent> ,r <Plug>(coc-rename)
  nmap <silent> ,f <Plug>(coc-format)
  nmap <silent> <C-e> :CocCommand explorer<CR>
  autocmd CursorHold * silent call CocActionAsync('highlight')
'''

# https://github.com/Shougo/dein.vim/issues/74
[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
  nnoremap <silent> <Leader>f :Files<CR>
  nnoremap <silent> <Leader>F :GFiles?<CR>
  nnoremap <silent> <Leader><Leader> :Buffers<CR>
  nnoremap <silent> <Leader>l :BLines<CR>
  nnoremap <silent> <Leader>. :Snippets<CR>
  nnoremap <silent> <Leader>h :History<CR>
  nnoremap <silent> <Leader>g :Rg<CR>

  command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)

  command! -bang -nargs=* Rg
    \ call fzf#vim#grep(
    \   'rg --column --line-number --no-heading --color=always --smart-case -- '.shellescape(<q-args>), 1,
    \   fzf#vim#with_preview({'options': '--exact --delimiter : --nth 3..'}), <bang>0)
'''

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap <silent> <Leader>s :Gstatus<CR>
  nnoremap <silent> <Leader>a :Gwrite<CR>
  nnoremap <silent> <Leader>c :Gcommit<CR>
  nnoremap <silent> <Leader>b :Gblame<CR>
  nnoremap <silent> <Leader>d :Gdiff<CR>
  nnoremap <silent> <Leader>m :Gmerge<CR>
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'machakann/vim-sandwich'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
'''

[[plugins]]
repo = 'sainnhe/gruvbox-material'
hook_add = '''
  let g:gruvbox_material_better_performance = 1
  colorscheme gruvbox-material
'''
